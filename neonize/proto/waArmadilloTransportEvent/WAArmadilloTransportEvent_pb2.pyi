"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class TransportEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Event(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class IcdcAlert(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            class _Type:
                ValueType = typing.NewType("ValueType", builtins.int)
                V: typing_extensions.TypeAlias = ValueType

            class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TransportEvent.Event.IcdcAlert._Type.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
                NONE: TransportEvent.Event.IcdcAlert._Type.ValueType  # 0
                DETECTED: TransportEvent.Event.IcdcAlert._Type.ValueType  # 1
                CLEARED: TransportEvent.Event.IcdcAlert._Type.ValueType  # 2

            class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
            NONE: TransportEvent.Event.IcdcAlert.Type.ValueType  # 0
            DETECTED: TransportEvent.Event.IcdcAlert.Type.ValueType  # 1
            CLEARED: TransportEvent.Event.IcdcAlert.Type.ValueType  # 2

            TYPE_FIELD_NUMBER: builtins.int
            type: global___TransportEvent.Event.IcdcAlert.Type.ValueType
            def __init__(
                self,
                *,
                type: global___TransportEvent.Event.IcdcAlert.Type.ValueType | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["type", b"type"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["type", b"type"]) -> None: ...

        @typing.final
        class DeviceChange(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            class _Type:
                ValueType = typing.NewType("ValueType", builtins.int)
                V: typing_extensions.TypeAlias = ValueType

            class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TransportEvent.Event.DeviceChange._Type.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
                NONE: TransportEvent.Event.DeviceChange._Type.ValueType  # 0
                ADDED: TransportEvent.Event.DeviceChange._Type.ValueType  # 1
                REMOVED: TransportEvent.Event.DeviceChange._Type.ValueType  # 2
                REPLACED: TransportEvent.Event.DeviceChange._Type.ValueType  # 3

            class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
            NONE: TransportEvent.Event.DeviceChange.Type.ValueType  # 0
            ADDED: TransportEvent.Event.DeviceChange.Type.ValueType  # 1
            REMOVED: TransportEvent.Event.DeviceChange.Type.ValueType  # 2
            REPLACED: TransportEvent.Event.DeviceChange.Type.ValueType  # 3

            TYPE_FIELD_NUMBER: builtins.int
            DEVICENAME_FIELD_NUMBER: builtins.int
            type: global___TransportEvent.Event.DeviceChange.Type.ValueType
            deviceName: builtins.str
            def __init__(
                self,
                *,
                type: global___TransportEvent.Event.DeviceChange.Type.ValueType | None = ...,
                deviceName: builtins.str | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["deviceName", b"deviceName", "type", b"type"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["deviceName", b"deviceName", "type", b"type"]) -> None: ...

        DEVICECHANGE_FIELD_NUMBER: builtins.int
        ICDCALERT_FIELD_NUMBER: builtins.int
        @property
        def deviceChange(self) -> global___TransportEvent.Event.DeviceChange: ...
        @property
        def icdcAlert(self) -> global___TransportEvent.Event.IcdcAlert: ...
        def __init__(
            self,
            *,
            deviceChange: global___TransportEvent.Event.DeviceChange | None = ...,
            icdcAlert: global___TransportEvent.Event.IcdcAlert | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["deviceChange", b"deviceChange", "event", b"event", "icdcAlert", b"icdcAlert"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["deviceChange", b"deviceChange", "event", b"event", "icdcAlert", b"icdcAlert"]) -> None: ...
        def WhichOneof(self, oneof_group: typing.Literal["event", b"event"]) -> typing.Literal["deviceChange", "icdcAlert"] | None: ...

    @typing.final
    class Placeholder(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _Type:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TransportEvent.Placeholder._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            DECRYPTION_FAILURE: TransportEvent.Placeholder._Type.ValueType  # 1
            UNAVAILABLE_MESSAGE: TransportEvent.Placeholder._Type.ValueType  # 2

        class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
        DECRYPTION_FAILURE: TransportEvent.Placeholder.Type.ValueType  # 1
        UNAVAILABLE_MESSAGE: TransportEvent.Placeholder.Type.ValueType  # 2

        TYPE_FIELD_NUMBER: builtins.int
        type: global___TransportEvent.Placeholder.Type.ValueType
        def __init__(
            self,
            *,
            type: global___TransportEvent.Placeholder.Type.ValueType | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["type", b"type"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["type", b"type"]) -> None: ...

    PLACEHOLDER_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    @property
    def placeholder(self) -> global___TransportEvent.Placeholder: ...
    @property
    def event(self) -> global___TransportEvent.Event: ...
    def __init__(
        self,
        *,
        placeholder: global___TransportEvent.Placeholder | None = ...,
        event: global___TransportEvent.Event | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["content", b"content", "event", b"event", "placeholder", b"placeholder"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["content", b"content", "event", b"event", "placeholder", b"placeholder"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["content", b"content"]) -> typing.Literal["placeholder", "event"] | None: ...

global___TransportEvent = TransportEvent
